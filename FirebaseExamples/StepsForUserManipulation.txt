Steps to create a email & password registration and login

1. Create a FirebaseAuth object and initialize it.

	private FirebaseAuth mAuth;
	// ...
	// Initialize Firebase Auth
	mAuth = FirebaseAuth.getInstance();

2. Override the onStart method to check if there is a user signed in.

	@Override
	public void onStart() {
	    super.onStart();
	    // Check if user is signed in (non-null) and update UI
	    FirebaseUser currentUser = mAuth.getCurrentUser();
	    updateUI(currentUser);
	}

3.To register a user use the following code:
	
	mAuth.createUserWithEmailAndPassword(email, password)
        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if (task.isSuccessful()) {
                    // Sign in success, update UI with the signed-in user's information
                    Log.d(TAG, "createUserWithEmail:success");
                    FirebaseUser user = mAuth.getCurrentUser();
                    updateUI(user);
                } else {
                    // If sign in fails, display a message to the user.
                    Log.w(TAG, "createUserWithEmail:failure", 			
		    task.getException());
                    Toast.makeText(EmailPasswordActivity.this,"Authentication failed.",Toast.LENGTH_SHORT).show();
                    updateUI(null);
                }
            }
        });

4. To signin a user use the following code:
	
	mAuth.signInWithEmailAndPassword(email, password)
        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if (task.isSuccessful()) {
                    // Sign in success, update UI with the signed-in user's information
                    Log.d(TAG, "signInWithEmail:success");
                    FirebaseUser user = mAuth.getCurrentUser();
                    updateUI(user);
                } else {
                    // If sign in fails, display a message to the user.
                    Log.w(TAG, "signInWithEmail:failure", task.getException());
                    Toast.makeText(EmailPasswordActivity.this, "Authentication failed.",
                            Toast.LENGTH_SHORT).show();
                    updateUI(null);
                }

                // ...
            }
        });

5. To signOut use: FirebaseAuth.getInstance().signOut();

6. To get all the users information

	FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
	if (user != null) {
	    // Name, email address, and profile photo Url
	    String name = user.getDisplayName();
	    String email = user.getEmail();
	    Uri photoUrl = user.getPhotoUrl();

	    // Check if user's email is verified
	    boolean emailVerified = user.isEmailVerified();

	    // The user's ID, unique to the Firebase project. Do NOT use this value to
	    // authenticate with your backend server, if you have one. Use
	    // FirebaseUser.getIdToken() instead.
	    String uid = user.getUid();
	}

7. to get the user provider-specific profile information:

	FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
	if (user != null) {
	for (UserInfo profile : user.getProviderData()) {
		// Id of the provider (ex: google.com)
	        String providerId = profile.getProviderId();

	        // UID specific to the provider
        	String uid = profile.getUid();

	        // Name, email address, and profile photo Url
        	String name = profile.getDisplayName();
	        String email = profile.getEmail();
        	Uri photoUrl = profile.getPhotoUrl();
	    }
	}

8. update the user profile:

	FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();

	UserProfileChangeRequest profileUpdates = new 	UserProfileChangeRequest.Builder()
        	.setDisplayName("Jane Q. User")
	        .setPhotoUri(Uri.parse("https://example.com/jane-q-user/profile.jpg"))
  	      .build();

	user.updateProfile(profileUpdates)
        	.addOnCompleteListener(new OnCompleteListener<Void>() {	      	@Override
        public void onComplete(@NonNull Task<Void> task) {
        	if (task.isSuccessful()) {
                    Log.d(TAG, "User profile updated.");
                }
            }
        });